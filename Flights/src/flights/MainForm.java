package flights;

import cputils.*;

public class MainForm extends javax.swing.JFrame {

    private Location[] allLocations;
    private Pilot[] allPilots;
    private Flight[] allFlights;

    /**
     * Creates new form
     */
    public MainForm() {
        initComponents();
        setQueryButtonState(false);

        allLocations = null;
        allPilots = null;
        allFlights = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtLocationsFile = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPilotsFile = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtFlightsFile = new javax.swing.JTextField();
        btnLoadData = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtOutput = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        btnA = new javax.swing.JButton();
        btnB = new javax.swing.JButton();
        btnC = new javax.swing.JButton();
        btnD = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Flights");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Input Files"));

        jLabel1.setText("Locations:");

        txtLocationsFile.setText("locations.csv");

        jLabel2.setText("Pilots:");

        txtPilotsFile.setText("pilots.csv");

        jLabel3.setText("Flights:");

        txtFlightsFile.setText("flights.csv");

        btnLoadData.setText("Load Data");
        btnLoadData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtLocationsFile, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPilotsFile, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtFlightsFile, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(btnLoadData)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtFlightsFile, txtLocationsFile, txtPilotsFile});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLocationsFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPilotsFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFlightsFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnLoadData)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtFlightsFile, txtLocationsFile, txtPilotsFile});

        txtOutput.setEditable(false);
        txtOutput.setColumns(20);
        txtOutput.setRows(5);
        jScrollPane1.setViewportView(txtOutput);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Queries"));

        btnA.setText("A - Flights on Wednesday Mornings (6:00 - 11:59)");
        btnA.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAActionPerformed(evt);
            }
        });

        btnB.setText("B - Flights to Region 4 that have both a Pilot and a Co-Pilot Assigned");
        btnB.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBActionPerformed(evt);
            }
        });

        btnC.setText("C - Flights by Pilots who have a Nickname");
        btnC.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCActionPerformed(evt);
            }
        });

        btnD.setText("<html>D - Flights with Strange Destination Codes <br>(the code's first letter does not match the first letter of the city or the country)</html>");
        btnD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnA)
                    .addComponent(btnB)
                    .addComponent(btnC)
                    .addComponent(btnD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnA, btnB, btnC, btnD});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnLoadDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadDataActionPerformed

    String locationsFile = txtLocationsFile.getText();
    String pilotsFile = txtPilotsFile.getText();
    String flightsFile = txtFlightsFile.getText();

    allLocations = createLocations(locationsFile);
    allPilots = createPilots(pilotsFile);
    allFlights = createFlights(flightsFile);
    displayAllFlights();
    setQueryButtonState(true);

}//GEN-LAST:event_btnLoadDataActionPerformed

    private void btnAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAActionPerformed

        // YOUR CODE HERE

    }//GEN-LAST:event_btnAActionPerformed

    private void btnBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBActionPerformed

        // YOUR CODE HERE

    }//GEN-LAST:event_btnBActionPerformed

    private void btnCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCActionPerformed

        // YOUR CODE HERE

    }//GEN-LAST:event_btnCActionPerformed

    private void btnDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDActionPerformed

        // YOUR CODE HERE

    }//GEN-LAST:event_btnDActionPerformed

    
    private void setQueryButtonState(boolean state) {
        btnA.setEnabled(state);
        btnB.setEnabled(state);
        btnC.setEnabled(state);
        btnD.setEnabled(state);
    }
    
    /**
     * Displays flights to the output area.
     */
    private void displayAllFlights() {
        txtOutput.setText(""); // clear output area

        for (int i = 0; i <= allFlights.length - 1; i++) {
            txtOutput.append(allFlights[i].toString() + "\n");
        }

        txtOutput.append("\nNumber of Flights: " + allFlights.length);
    }

    /**
     * Creates Location objects from data in a file.
     *
     * @param fileName the file containing the location data
     * @return an array of Location objects
     */
    private Location[] createLocations(String fileName) {
        Location[] res;
        String[] data;
        String line;
        String[] pieces;
        String locationCode;
        String city;
        String country;
        int region;
        Location temp;

        data = FileUtils.readIntoArray(fileName);
        res = new Location[data.length];
        for (int i = 0; i < data.length; i++) {
            line = data[i];
            pieces = line.split(",");
            locationCode = pieces[0];
            city = pieces[1];
            country = pieces[2];
            region = Integer.parseInt(pieces[3]);
            temp = new Location(locationCode, city, country, region);
            res[i] = temp;
        }

        return res;
    } // end createLocations

    /**
     * Creates Pilot objects from data in a file.
     *
     * @param fileName the file containing the pilot data
     * @return an array of Pilot objects
     */
    private Pilot[] createPilots(String fileName) {
        Pilot[] res;
        String[] data;
        String line;
        String[] pieces;

        int id;
        String lastName;
        String firstName;
        String nickName;
        Pilot temp = null;

        data = FileUtils.readIntoArray(fileName);
        res = new Pilot[data.length];
        for (int i = 0; i < data.length; i++) {
            line = data[i];
            pieces = line.split(",");
            id = Integer.parseInt(pieces[0]);
            lastName = pieces[1];
            firstName = pieces[2];

            if (pieces.length == 3) {
                temp = new Pilot(id, lastName, firstName);
            } else if (pieces.length == 4) {
                nickName = pieces[3];
                temp = new Pilot(id, lastName, firstName, nickName);
            } else {
                System.err.println("Invalid pilot record: " + line);
            }

            res[i] = temp;
        }

        return res;
    } // end createPilots

    /**
     * Creates Flight objects from data in a file. Note that Location objects
     * and Pilot objects must first be created.
     *
     * @param fileName the file containing the flight data
     * @return an array of Flight objects
     */
    private Flight[] createFlights(String fileName) {
        Flight[] res;
        String[] data;
        String line;
        String[] pieces;
        String flightNumber;
        String dow;
        int time;
        String destCode;
        int pilotID;
        int copilotID;
        Location destination;
        Pilot pilot;
        Pilot copilot;
        Flight temp = null;

        data = FileUtils.readIntoArray(fileName);
        res = new Flight[data.length];
        for (int i = 0; i < data.length; i++) {
            line = data[i];
            pieces = line.split(",");
            flightNumber = pieces[0];
            dow = pieces[1];
            time = Integer.parseInt(pieces[2]);
            destCode = pieces[3];
            destination = findLocation(destCode);
            if (pieces.length == 4) {
                temp = new Flight(flightNumber, dow, time, destination);
            } else if (pieces.length == 5) {
                pilotID = Integer.parseInt(pieces[4]);
                pilot = findPilot(pilotID);
                temp = new Flight(flightNumber, dow, time, destination, pilot);
            } else if (pieces.length == 6) {
                pilotID = Integer.parseInt(pieces[4]);
                copilotID = Integer.parseInt(pieces[5]);
                pilot = findPilot(pilotID);
                copilot = findPilot(copilotID);
                temp = new Flight(flightNumber, dow, time, destination, pilot, copilot);
            } else {
                System.err.println("Invalid flight record: " + line);
            }

            res[i] = temp;
        }

        return res;
    } // end createFlights

    /**
     * Finds the Location object with the specified location code.
     *
     * @param locationCode the three-letter location code to match
     * @return the Location object with that code.
     */
    private Location findLocation(String locationCode) {
        Location res = null;

        for (int i = 0; i <= allLocations.length - 1; i++) {
            if (allLocations[i].getLocationCode().equals(locationCode)) {
                res = allLocations[i];
                break;
            }
        }

        return res;
    } // end findLocation

    /**
     * Finds the Pilot object with the specified pilot ID.
     *
     * @param id the employee ID of the pilot
     * @return the Pilot object with the specified ID.
     */
    private Pilot findPilot(int id) {
        Pilot res = null;

        for (int i = 0; i <= allPilots.length - 1; i++) {
            if (allPilots[i].getId() == id) {
                res = allPilots[i];
                break;
            }
        }

        return res;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnA;
    private javax.swing.JButton btnB;
    private javax.swing.JButton btnC;
    private javax.swing.JButton btnD;
    private javax.swing.JButton btnLoadData;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtFlightsFile;
    private javax.swing.JTextField txtLocationsFile;
    private javax.swing.JTextArea txtOutput;
    private javax.swing.JTextField txtPilotsFile;
    // End of variables declaration//GEN-END:variables
}
